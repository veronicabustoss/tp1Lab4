{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/clases/mascota.ts","webpack:///src/app/componentes/carga-mascota/carga-mascota.component.ts","webpack:///src/app/componentes/carga-mascota/carga-mascota.component.html","webpack:///src/app/componentes/listado/listado.component.ts","webpack:///src/app/componentes/listado/listado.component.html","webpack:///src/app/componentes/mascota/mascota.component.ts","webpack:///src/app/componentes/mascota/mascota.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Mascota","nombre","tipo","src","CargaMascotaComponent","turno","event","emit","imagen","slice","enviarMascota","ListadoComponent","mascotas","datos","push","auxMas","console","log","cargarLista","MascotaComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'veterinaria';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>TP1</title>\n</head>\n<body>\n    <app-listado></app-listado>  \n</body>\n</html>\n\n\n  \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CargaMascotaComponent } from './componentes/carga-mascota/carga-mascota.component';\nimport { ListadoComponent } from './componentes/listado/listado.component';\nimport { MascotaComponent } from './componentes/mascota/mascota.component';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CargaMascotaComponent,\n    ListadoComponent,\n    MascotaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Mascota {\n    \n    nombre: string;\n    tipo: string;\n    src : string;\n \n    constructor (nombre,tipo,src)\n    {\n        this.nombre = nombre;\n        this.tipo = tipo;\n        this.src = src;\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Mascota } from \"../../clases/mascota\";\n\n@Component({\n  selector: 'app-carga-mascota',\n  templateUrl: './carga-mascota.component.html',\n  styleUrls: ['./carga-mascota.component.css']\n})\nexport class CargaMascotaComponent implements OnInit {\n\n  @Output() turno =  new EventEmitter<any>();\n  @Input () nombre : string;\n  @Input () imagen :string;\n  @Input() tipo : string;\n  //otraImagen = new FileReader();\n\n  //public lista : Array<Mascota>  = [];\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public enviarMascota(event)\n  {\n    return this.turno.emit(new Mascota(this.nombre,this.tipo,\"../../../assets/\"+this.imagen.slice(12)));\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body >\n        <div class=\"titulo\" align=\"center\">\n          <h1>¡Bienvenidos!</h1>    \n        </div>\n\n    <br>\n    <table align=\"center\">\n        <tr>\n            <label for=\"\">Nombre:</label>\n        </tr>\n        <tr>\n            <input type=\"text\" name=\"nombre\" id=\"nombre\" [(ngModel)]=\"nombre\" > <!--([ngModel])=\"nombre\"-->\n        </tr>\n        <tr>\n            <label for=\"Hola\">Imagen:</label>\n        </tr>\n        <tr>\n            <input type=\"file\" name=\"imagen\" id=\"imagen\" [(ngModel)]=\"imagen\"><!--Fijarse bien el tema este-->\n        </tr>\n       <tr>\n        <label for=\"\">Tipo:</label>\n       </tr>\n        <tr>\n            <select name=\"animal\" id=\"animal\" [(ngModel)]=\"tipo\">\n                <option value=\"perro\">Perro</option>\n                <option value=\"gato\">Gato</option>\n                <option value=\"pez\">Pez</option>\n            </select>\n            \n        </tr>    \n        <th>\n            <br>\n            <input type=\"button\" value=\"Enviar\" class=\"btn\" (click)=\"enviarMascota($event)\">\n        </th>\n    </table>\n    \n\n    <br>\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { Mascota } from \"../../clases/mascota\";\n\n@Component({\n  selector: 'app-listado',\n  templateUrl: './listado.component.html',\n  styleUrls: ['./listado.component.css']\n})\nexport class ListadoComponent implements OnInit {\n\n  public mascotas : Array<Mascota> = [];\n  public datos : Mascota;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.datos = null;\n  }\n\n  cargarLista(e)\n  {\n    return this.mascotas.push(e);\n  }\n\n  verDetalle(auxMas:Mascota )\n  {\n    this.datos = auxMas;\n\n    console.log(this.datos);\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body>\n<br>\n\n   \n    <app-carga-mascota\n    (turno) = \"cargarLista($event)\"\n    ></app-carga-mascota>\n\n    <div *ngIf=\"datos != null\">\n        <app-mascota\n        [mascota] = \"datos\"\n        ></app-mascota>\n    </div>\n    \n    \n    <div align=\"center\"  >\n        <div *ngFor=\"let mascota of mascotas\">\n\n            <div *ngIf=\"mascota.tipo == 'perro'\" class=\"perroColor\">\n            <br>\n            <h2>Nombre: {{mascota.nombre}} </h2>\n            <div *ngIf= \"mascota.nombre != null\">\n                <input type=\"button\" value=\"Ver detalles\" (click)=\"verDetalle(mascota)\" class=\"boton\">\n      \n            </div>\n        </div>\n        <div *ngIf=\"mascota.tipo == 'gato'\" class=\"gatoColor\">\n            <br>\n            <h2>Nombre: {{mascota.nombre}} </h2>\n            <div *ngIf= \"mascota.nombre != null\">\n                <input type=\"button\" value=\"Ver detalles\" (click)=\"verDetalle(mascota)\" class=\"boton\">\n            </div>\n        </div>\n        <div *ngIf=\"mascota.tipo == 'pez'\" class=\"pezColor\">\n            <br>\n            <h2>Nombre: {{mascota.nombre}} </h2>\n            <div *ngIf= \"mascota.nombre != null\">\n                <input type=\"button\" value=\"Ver detalles\" (click)=\"verDetalle(mascota)\" class=\"boton\">\n            </div>\n        </div>\n        </div>\n        \n\n    </div>\n</body>\n</html>","import { Component, OnInit,Input, Output, EventEmitter } from '@angular/core';\nimport { Mascota } from \"../../clases/mascota\";\n\n\n@Component({\n  selector: 'app-mascota',\n  templateUrl: './mascota.component.html',\n  styleUrls: ['./mascota.component.css']\n})\nexport class MascotaComponent implements OnInit {\n\n  @Input() mascota : Mascota; \n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<div *ngIf=\"mascota != null\" align=\"center\">\r\n    <div *ngIf=\"mascota.tipo == 'perro'\" class=\"perroColor\">\r\n        <img src={{mascota.src}} alt=\"\" width=\"250\" height=\"150\">\r\n    <h2>\r\n        Nombre: {{mascota.nombre}} <br>\r\n        Tipo: {{mascota.tipo}}\r\n\r\n    </h2>\r\n    </div>\r\n\r\n    <div *ngIf=\"mascota.tipo == 'gato'\" class=\"gatoColor\">\r\n        <img src={{mascota.src}} alt=\"\" width=\"250\" height=\"150\">\r\n    <h2>\r\n        Nombre: {{mascota.nombre}} <br>\r\n        Tipo: {{mascota.tipo}}\r\n\r\n    </h2>\r\n    </div>\r\n\r\n    <div *ngIf=\"mascota.tipo == 'pez'\" class=\"pezColor\">\r\n        <img src={{mascota.src}} alt=\"\" width=\"250\" height=\"150\">\r\n    <h2>\r\n        Nombre: {{mascota.nombre}} <br>\r\n        Tipo: {{mascota.tipo}}\r\n\r\n    </h2>\r\n    </div>\r\n  \r\n</div>\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}